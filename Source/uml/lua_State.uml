<?xml version="1.0" encoding="UTF-8"?>
<XPD:PROJECT xmlns:XPD="http://www.staruml.com" version="1">
<XPD:HEADER>
<XPD:SUBUNITS>
</XPD:SUBUNITS>
<XPD:PROFILES>
</XPD:PROFILES>
</XPD:HEADER>
<XPD:BODY>
<XPD:OBJ name="DocumentElement" type="UMLProject" guid="KiePfTGG80meQfK/iXBFYAAA">
<XPD:ATTR name="Title" type="string">lua_State</XPD:ATTR>
<XPD:ATTR name="#OwnedElements" type="integer">1</XPD:ATTR>
<XPD:OBJ name="OwnedElements[0]" type="UMLModel" guid="k4yb6qfl20SZNHhhq3HrUwAA">
<XPD:ATTR name="Name" type="string">lua_State</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lua_State</XPD:ATTR>
<XPD:REF name="Namespace">KiePfTGG80meQfK/iXBFYAAA</XPD:REF>
<XPD:ATTR name="#OwnedDiagrams" type="integer">1</XPD:ATTR>
<XPD:OBJ name="OwnedDiagrams[0]" type="UMLClassDiagram" guid="eDBvpwcZx0mNCWAYzmJNWQAA">
<XPD:ATTR name="Name" type="string">lua_State</XPD:ATTR>
<XPD:REF name="DiagramOwner">k4yb6qfl20SZNHhhq3HrUwAA</XPD:REF>
<XPD:OBJ name="DiagramView" type="UMLClassDiagramView" guid="Rgl7BVV5mEONp0An+jrYqQAA">
<XPD:REF name="Diagram">eDBvpwcZx0mNCWAYzmJNWQAA</XPD:REF>
<XPD:ATTR name="#OwnedViews" type="integer">71</XPD:ATTR>
<XPD:OBJ name="OwnedViews[0]" type="UMLNoteView" guid="BtTSGt8zhkiVBPUQp3BwgQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">228</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">540</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">373</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">30</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define CommonHeader        GCObject *next; lu_byte tt; lu_byte marked
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[1]" type="UMLNoteView" guid="QRJwDSmvjkioU4kUQJEzUQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">308</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">744</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">206</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">158</XPD:ATTR>
<XPD:ATTR name="Text" type="string">union GCObject {
  GCheader gch;  /* common header */
  union TString ts;
  union Udata u;
  union Closure cl;
  struct Table h;
  struct Proto p;
  struct UpVal uv;
  struct lua_State th;  /* thread */
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[2]" type="UMLNoteView" guid="8ZwCbBD5a0aqhwXT9y/xfAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">340</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">628</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">148</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct GCheader {
  CommonHeader;
} GCheader;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[3]" type="UMLNoteLinkView" guid="Rh3+QuAgCUSYBvs+Pt+0lAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">413,628;414,569</XPD:ATTR>
<XPD:REF name="Head">BtTSGt8zhkiVBPUQp3BwgQAA</XPD:REF>
<XPD:REF name="Tail">8ZwCbBD5a0aqhwXT9y/xfAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[4]" type="UMLNoteLinkView" guid="iLJPMhq240Wnf8AIKOyhjwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">411,744;412,680</XPD:ATTR>
<XPD:REF name="Head">8ZwCbBD5a0aqhwXT9y/xfAAA</XPD:REF>
<XPD:REF name="Tail">QRJwDSmvjkioU4kUQJEzUQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[5]" type="UMLNoteView" guid="FNTPzWYAFUa8cEt9Y1YFEgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">776</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">380</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">391</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">353</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct lua_State {
  CommonHeader;
  lu_byte status;
  StkId top;                          /* first free slot in the stack */
  global_State *l_G;
  CallInfo *ci;                       /* call info for current function */
  const Instruction *oldpc;  /* last pc traced */
  StkId stack_last;               /* last free slot in the stack */
  StkId stack;                       /* stack base */
  int stacksize;
  unsigned short nny;          /* number of non-yieldable calls in stack */
  unsigned short nCcalls;     /* number of nested C calls */
  lu_byte hookmask;
  lu_byte allowhook;
  int basehookcount;
  int hookcount;
  lua_Hook hook;
  GCObject *openupval;       /* list of open upvalues in this stack */
  GCObject *gclist;
  struct lua_longjmp *errorJmp;  /* current error recover point */
  ptrdiff_t errfunc;               /* current error handling function (stack index) */
  CallInfo base_ci;                /* CallInfo for first level (C calling Lua) */
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[6]" type="UMLNoteLinkView" guid="kCanylSZUEC/fS5cL2ouWgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">776,555;600,555</XPD:ATTR>
<XPD:REF name="Head">BtTSGt8zhkiVBPUQp3BwgQAA</XPD:REF>
<XPD:REF name="Tail">FNTPzWYAFUa8cEt9Y1YFEgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[7]" type="UMLNoteView" guid="K8uzbTNA9k2biMAodrvsBwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1312</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">300</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">492</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">518</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct global_State {
  lua_Alloc frealloc;                             /* function to reallocate memory */
  void *ud;                                          /* auxiliary data to `frealloc' */
  lu_mem totalbytes;                           /* number of bytes currently allocated - GCdebt */
  l_mem GCdebt;                                 /* bytes allocated not yet compensated by the collector */
  lu_mem lastmajormem;                     /* memory in use after last major collection */
  stringtable strt;                                 /* hash table for strings */
  TValue l_registry;
  lu_byte currentwhite;
  lu_byte gcstate;                                 /* state of garbage collector */
  lu_byte gckind;                                   /* kind of GC running */
  lu_byte gcrunning;                              /* true if GC is running */
  int sweepstrgc;                                    /* position of sweep in `strt' */
  GCObject *allgc;                                  /* list of all collectable objects */
  GCObject *finobj;                                /* list of collectable objects with finalizers */
  GCObject **sweepgc;                         /* current position of sweep */
  GCObject *gray;                                  /* list of gray objects */
  GCObject *grayagain;                          /* list of objects to be traversed atomically */
  GCObject *weak;                                  /* list of tables with weak values */
  GCObject *ephemeron;                         /* list of ephemeron tables (weak keys) */
  GCObject *allweak;                               /* list of all-weak tables */
  GCObject *tobefnz;                              /* list of userdata to be GC */
  UpVal uvhead;                                       /* head of double-linked list of all open upvalues */
  Mbuffer buff;                                         /* temporary buffer for string concatenation */
  int gcpause;                                           /* size of pause between successive GCs */
  int gcmajorinc;                                       /* how much to wait for a major GC (only in gen. mode) */
  int gcstepmul;                                        /* GC `granularity' */
  lua_CFunction panic;                             /* to be called in unprotected errors */
  struct lua_State *mainthread;
  const lua_Number *version;                  /* pointer to version number */
  TString *memerrmsg;                             /* memory-error message */
  TString *tmname[TM_N];                       /* array with tag-method names */
  struct Table *mt[LUA_NUMTAGS];         /* metatables for basic types */
} global_State;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[8]" type="UMLNoteLinkView" guid="vA/HJtkpqEyegT8duAHJhwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1312,557;1166,557</XPD:ATTR>
<XPD:REF name="Head">FNTPzWYAFUa8cEt9Y1YFEgAA</XPD:REF>
<XPD:REF name="Tail">K8uzbTNA9k2biMAodrvsBwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[9]" type="UMLNoteView" guid="7W4AS2mQp0eBKL9kRVgOcwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">332</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">388</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">183</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">30</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct lua_TValue TValue;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[10]" type="UMLNoteView" guid="UhaMY5fVGEm+nopelmvMDgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">368</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">304</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">111</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct lua_TValue {
  TValuefields;
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[11]" type="UMLNoteLinkView" guid="AmF/4rnRMUWbxnK2KEr+EwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">423,356;423,388</XPD:ATTR>
<XPD:REF name="Head">7W4AS2mQp0eBKL9kRVgOcwAA</XPD:REF>
<XPD:REF name="Tail">UhaMY5fVGEm+nopelmvMDgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[12]" type="UMLNoteView" guid="j3D/z0LF3E+AgZEfoXlOxgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">268</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">228</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">307</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define TValuefields        Value value_; int tt_
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[13]" type="UMLNoteLinkView" guid="miQXTc7FU0GXJMAP7o2wtwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">422,304;421,265</XPD:ATTR>
<XPD:REF name="Head">j3D/z0LF3E+AgZEfoXlOxgAA</XPD:REF>
<XPD:REF name="Tail">UhaMY5fVGEm+nopelmvMDgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[14]" type="UMLNoteView" guid="2Qnj6GMKHUGNHjwowGVyTgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">240</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">944</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">347</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">323</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct CallInfo {
  StkId func;  /* function index in the stack */
  StkId        top;  /* top for this function */
  struct CallInfo *previous, *next;  /* dynamic call link */
  short nresults;  /* expected number of results from this function */
  lu_byte callstatus;
  union {
    struct {  /* only for Lua functions */
      StkId base;  /* base for this function */
      const Instruction *savedpc;
    } l;
    struct {  /* only for C functions */
      int ctx;  /* context info. in case of yields */
      lua_CFunction k;  /* continuation in case of yields */
      ptrdiff_t old_errfunc;
      ptrdiff_t extra;
      lu_byte old_allowhook;
      lu_byte status;
    } c;
  } u;
} CallInfo;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[15]" type="UMLNoteLinkView" guid="SnC7FxPLpUOBqi4N80g/XAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">792,732;577,944</XPD:ATTR>
<XPD:REF name="Head">2Qnj6GMKHUGNHjwowGVyTgAA</XPD:REF>
<XPD:REF name="Tail">FNTPzWYAFUa8cEt9Y1YFEgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[16]" type="UMLNoteView" guid="DC4dUxERf0GRTmXJDvfINQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">360</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">444</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">127</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">30</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef TValue *StkId
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[17]" type="UMLNoteLinkView" guid="AbsHf/5B4UCn6tYRu+tQDQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">423,444;423,417</XPD:ATTR>
<XPD:REF name="Head">7W4AS2mQp0eBKL9kRVgOcwAA</XPD:REF>
<XPD:REF name="Tail">DC4dUxERf0GRTmXJDvfINQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[18]" type="UMLNoteLinkView" guid="RgDKWpvfF02hLKZGCt4HrwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">776,521;486,469</XPD:ATTR>
<XPD:REF name="Head">DC4dUxERf0GRTmXJDvfINQAA</XPD:REF>
<XPD:REF name="Tail">FNTPzWYAFUa8cEt9Y1YFEgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[19]" type="UMLNoteView" guid="W7GqCI4gF0Sxp5TTXY1bbAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">308</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">84</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">225</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">union Value {
  GCObject *gc;     /* collectable objects */
  void *p;               /* light userdata */
  int b;                   /* booleans */
  lua_CFunction f; /* light C functions */
  numfield              /* numbers */
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[20]" type="UMLNoteLinkView" guid="4JWRvzMVQUSEWovlZFh4AAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">421,228;421,196</XPD:ATTR>
<XPD:REF name="Head">W7GqCI4gF0Sxp5TTXY1bbAAA</XPD:REF>
<XPD:REF name="Tail">j3D/z0LF3E+AgZEfoXlOxgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[21]" type="UMLNoteView" guid="eJRgwwL0wUCnZm5r5/efmAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">968</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1512</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">429</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">353</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Proto {
  CommonHeader;
  TValue *k;                      /* constants used by the function */
  Instruction *code;
  struct Proto **p;            /* functions defined inside the function */
  int *lineinfo;                    /* map from opcodes to source lines (debug information) */
  LocVar *locvars;              /* information about local variables (debug information) */
  Upvaldesc *upvalues;      /* upvalue information */
  union Closure *cache;      /* last created closure with this prototype */
  TString  *source;              /* used for debug information */
  int sizeupvalues;               /* size of 'upvalues' */
  int sizek;                            /* size of `k' */
  int sizecode;
  int sizelineinfo;
  int sizep;                            /* size of `p' */
  int sizelocvars;
  int linedefined;
  int lastlinedefined;
  GCObject *gclist;
  lu_byte numparams;          /* number of fixed parameters */
  lu_byte is_vararg;
  lu_byte maxstacksize;        /* maximum stack used by this function */
} Proto;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[22]" type="UMLNoteView" guid="AJGWFDBj9E+oEH+rfLxx3gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">348</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2060</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">134</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef union Closure {
  CClosure c;
  LClosure l;
} Closure;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[23]" type="UMLNoteView" guid="vcjAkNLeVkC2JqTWHMeu3wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">128</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1932</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">221</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct CClosure {
  ClosureHeader;
  lua_CFunction f;
  TValue upvalue[1];  /* list of upvalues */
} CClosure;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[24]" type="UMLNoteView" guid="LnyGaR15JkKG5H64PjMhKAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">468</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1932</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">215</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct LClosure {
  ClosureHeader;
  struct Proto *p;
  UpVal *upvals[1];  /* list of upvalues */
} LClosure;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[25]" type="UMLNoteLinkView" guid="cPAS7P19Tk2/yfjXEpRzEgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">366,2060;298,2014</XPD:ATTR>
<XPD:REF name="Head">vcjAkNLeVkC2JqTWHMeu3wAA</XPD:REF>
<XPD:REF name="Tail">AJGWFDBj9E+oEH+rfLxx3gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[26]" type="UMLNoteLinkView" guid="M7VBYHsz8ka6Gb4SJy/9WgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">458,2060;520,2014</XPD:ATTR>
<XPD:REF name="Head">LnyGaR15JkKG5H64PjMhKAAA</XPD:REF>
<XPD:REF name="Tail">AJGWFDBj9E+oEH+rfLxx3gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[27]" type="UMLNoteView" guid="ZubSVaNQmUO7W3QC72b0EwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">236</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1800</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">361</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define ClosureHeader \
        CommonHeader; lu_byte isC; lu_byte nupvalues; GCObject *gclist
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[28]" type="UMLNoteView" guid="VEAeKh/pmE+x2pVlzGwmCgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">552</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1600</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">271</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">173</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct UpVal {
  CommonHeader;
  TValue *v;  /* points to stack or to its own value */
  union {
    TValue value;  /* the value (when closed) */
    struct {  /* double linked list (when open) */
      struct UpVal *prev;
      struct UpVal *next;
    } l;
  } u;
} UpVal;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[29]" type="UMLNoteLinkView" guid="2GrTQbXzMU6CbDiIlh1LFQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">285,1932;394,1837</XPD:ATTR>
<XPD:REF name="Head">ZubSVaNQmUO7W3QC72b0EwAA</XPD:REF>
<XPD:REF name="Tail">vcjAkNLeVkC2JqTWHMeu3wAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[30]" type="UMLNoteLinkView" guid="qyRfDpQnyESgjHgAwg3/XAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">533,1932;436,1837</XPD:ATTR>
<XPD:REF name="Head">ZubSVaNQmUO7W3QC72b0EwAA</XPD:REF>
<XPD:REF name="Tail">LnyGaR15JkKG5H64PjMhKAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[31]" type="UMLNoteLinkView" guid="BNBcyNVxWUa4RBLJVRo+1AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">591,1932;653,1772</XPD:ATTR>
<XPD:REF name="Head">VEAeKh/pmE+x2pVlzGwmCgAA</XPD:REF>
<XPD:REF name="Tail">LnyGaR15JkKG5H64PjMhKAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[32]" type="UMLNoteLinkView" guid="t+ye1bM570mVBty5iTExIgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">968,1687;822,1686</XPD:ATTR>
<XPD:REF name="Head">VEAeKh/pmE+x2pVlzGwmCgAA</XPD:REF>
<XPD:REF name="Tail">eJRgwwL0wUCnZm5r5/efmAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[33]" type="UMLNoteView" guid="2HvULl6tL0yFS1EVPXblAQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">232</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2652</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">378</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">173</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Table {
  CommonHeader;
  lu_byte flags;                    /* 1&lt;&lt;p means tagmethod(p) is not present */
  lu_byte lsizenode;             /* log2 of size of `node' array */
  struct Table *metatable;
  TValue *array;                  /* array part */
  Node *node;
  Node *lastfree;                 /* any free position is before this position */
  GCObject *gclist;
  int sizearray;                     /* size of `array' array */
} Table;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[34]" type="UMLNoteView" guid="Sq/aQmqWkUWi4zrI+4wduAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">356</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2544</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">125</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Node {
  TValue i_val;
  TKey i_key;
} Node;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[35]" type="UMLNoteView" guid="wJQKqTt8qE2m4v8RW1s8awAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">312</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2396</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">211</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef union TKey {
  struct {
    TValuefields;
    struct Node *next;  /* for chaining */
  } nk;
  TValue tvk;
} TKey;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[36]" type="UMLNoteLinkView" guid="EXoMlaLW20qyzVo7wRXVcQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">418,2544;418,2508</XPD:ATTR>
<XPD:REF name="Head">wJQKqTt8qE2m4v8RW1s8awAA</XPD:REF>
<XPD:REF name="Tail">Sq/aQmqWkUWi4zrI+4wduAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[37]" type="UMLNoteLinkView" guid="7Q+OqZx5RUilzpxHj2jJAAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">419,2652;418,2611</XPD:ATTR>
<XPD:REF name="Head">Sq/aQmqWkUWi4zrI+4wduAAA</XPD:REF>
<XPD:REF name="Tail">2HvULl6tL0yFS1EVPXblAQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[38]" type="UMLNoteView" guid="keTfiN/F/kayaQIH/Pm9/AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">64</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2304</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">307</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define TValuefields        Value value_; int tt_
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[39]" type="UMLNoteLinkView" guid="KSMaliJcOky9VYB878C9LwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">331,2396;246,2341</XPD:ATTR>
<XPD:REF name="Head">keTfiN/F/kayaQIH/Pm9/AAA</XPD:REF>
<XPD:REF name="Tail">wJQKqTt8qE2m4v8RW1s8awAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[40]" type="UMLNoteView" guid="e4X2Lfm2tke/rauCA6KNBQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">486</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2306</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">183</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">30</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct lua_TValue TValue;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[41]" type="UMLNoteView" guid="oNXkKeodm0W39t4ak6Nq2QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">522</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2222</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">111</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct lua_TValue {
  TValuefields;
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[42]" type="UMLNoteLinkView" guid="5mFFnU7bNU+CpuHjhCTEiwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">577,2274;577,2306</XPD:ATTR>
<XPD:REF name="Head">e4X2Lfm2tke/rauCA6KNBQAA</XPD:REF>
<XPD:REF name="Tail">oNXkKeodm0W39t4ak6Nq2QAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[43]" type="UMLNoteLinkView" guid="5YIqwFsGfkiF+NxbzsQaAwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">485,2396;559,2335</XPD:ATTR>
<XPD:REF name="Head">e4X2Lfm2tke/rauCA6KNBQAA</XPD:REF>
<XPD:REF name="Tail">wJQKqTt8qE2m4v8RW1s8awAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[44]" type="UMLNoteView" guid="vk/+hryItk2oG3nIFUzm8QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1460</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2664</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">393</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">263</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct FuncState {
  Proto *f;                           /* current function header */
  Table *h;                           /* table to find (and reuse) elements in `k' */
  struct FuncState *prev;    /* enclosing function */
  struct LexState *ls;           /* lexical state */
  struct BlockCnt *bl;           /* chain of current blocks */
  int pc;                                /* next position to code (equivalent to `ncode') */
  int lasttarget;                    /* 'label' of last 'jump label' */
  int jpc;                               /* list of pending jumps to `pc' */
  int nk;                                 /* number of elements in `k' */
  int np;                                 /* number of elements in `p' */
  int firstlocal;                       /* index of first local var (in Dyndata array) */
  short nlocvars;                    /* number of elements in 'f-&gt;locvars' */
  lu_byte nactvar;                 /* number of active local variables */
  lu_byte nups;                      /* number of upvalues */
  lu_byte freereg;                  /* first free register */
} FuncState;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[45]" type="UMLNoteView" guid="yr9p4fOZw0Oq/P1WxX3vcgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1444</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2208</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">423</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">353</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Proto {
  CommonHeader;
  TValue *k;                     /* constants used by the function */
  Instruction *code;
  struct Proto **p;          /* functions defined inside the function */
  int *lineinfo;                  /* map from opcodes to source lines (debug information) */
  LocVar *locvars;           /* information about local variables (debug information) */
  Upvaldesc *upvalues;  /* upvalue information */
  union Closure *cache;  /* last created closure with this prototype */
  TString  *source;          /* used for debug information */
  int sizeupvalues;           /* size of 'upvalues' */
  int sizek;                        /* size of `k' */
  int sizecode;
  int sizelineinfo;
  int sizep;                        /* size of `p' */
  int sizelocvars;
  int linedefined;
  int lastlinedefined;
  GCObject *gclist;
  lu_byte numparams;       /* number of fixed parameters */
  lu_byte is_vararg;
  lu_byte maxstacksize;     /* maximum stack used by this function */
} Proto;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[46]" type="UMLNoteLinkView" guid="kkv4j23lgESananeLcd59gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1656,2664;1656,2560</XPD:ATTR>
<XPD:REF name="Head">yr9p4fOZw0Oq/P1WxX3vcgAA</XPD:REF>
<XPD:REF name="Tail">vk/+hryItk2oG3nIFUzm8QAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[47]" type="UMLNoteView" guid="5+7V+HVnFkOMbMmWIiMrsgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">972</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2340</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">378</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Upvaldesc {
  TString *name;   /* upvalue name (for debug information) */
  lu_byte instack;  /* whether it is in stack */
  lu_byte idx;        /* index of upvalue (in stack or in outer function's list) */
} Upvaldesc;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[48]" type="UMLNoteLinkView" guid="ugzdxcd0H0KTVVXyzfctPgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1444,2383;1349,2382</XPD:ATTR>
<XPD:REF name="Head">5+7V+HVnFkOMbMmWIiMrsgAA</XPD:REF>
<XPD:REF name="Tail">yr9p4fOZw0Oq/P1WxX3vcgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[49]" type="UMLNoteView" guid="zFcB/syTokmysmrnjFpQpgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1000</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2504</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">293</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct Zio {
  size_t n;                         /* bytes still unread */
  const char *p;                /* current position in buffer */
  lua_Reader reader;       /* reader function */
  void* data;                    /* additional data */
  lua_State *L;                 /* Lua state (for reader) */
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[50]" type="UMLNoteView" guid="qSWVupfPiUKi6xGJMWWXswAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">972</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2680</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">347</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">128</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct CallInfo {
  StkId base;  /* base for this function */
  StkId func;  /* function index in the stack */
  StkId top;  /* top for this function */
  const Instruction *savedpc;
  int nresults;  /* expected number of results from this function */
  int tailcalls;  /* number of tail calls lost under this entry */
} CallInfo;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[51]" type="UMLNoteView" guid="/lwFOc2KAkioTP2RezLGngAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">804</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">32</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">326</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">278</XPD:ATTR>
<XPD:ATTR name="Text" type="string">static void stack_init (lua_State *L1, lua_State *L) {
  int i; CallInfo *ci;
  /* initialize stack array */
  L1-&gt;stack = luaM_newvector(L, BASIC_STACK_SIZE, TValue);
  L1-&gt;stacksize = BASIC_STACK_SIZE;
  for (i = 0; i &lt; BASIC_STACK_SIZE; i++)
    setnilvalue(L1-&gt;stack + i);  /* erase new stack */
  L1-&gt;top = L1-&gt;stack;
  L1-&gt;stack_last = L1-&gt;stack + L1-&gt;stacksize - EXTRA_STACK;
  /* initialize first ci */
  ci = &amp;L1-&gt;base_ci;
  ci-&gt;next = ci-&gt;previous = NULL;
  ci-&gt;callstatus = 0;
  ci-&gt;func = L1-&gt;top;
  setnilvalue(L1-&gt;top++);  /* 'function' entry for this 'ci' */
  ci-&gt;top = L1-&gt;top + LUA_MINSTACK;
  L1-&gt;ci = ci;
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[52]" type="UMLNoteLinkView" guid="7Bk7BKv7EEGXu7tgv45J3AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">969,380;968,309</XPD:ATTR>
<XPD:REF name="Head">/lwFOc2KAkioTP2RezLGngAA</XPD:REF>
<XPD:REF name="Tail">FNTPzWYAFUa8cEt9Y1YFEgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[53]" type="UMLNoteView" guid="t/K62n1m5EyVk+u7ZBkjBgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">156</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3360</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">312</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define luaL_dofile(L, fn) \
        (luaL_loadfile(L, fn) || lua_pcall(L, 0, LUA_MULTRET, 0))
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[54]" type="UMLNoteView" guid="c2kJ49O9ZUeWn+Dp6xzRqwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">524</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3328</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">279</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">30</XPD:ATTR>
<XPD:ATTR name="Text" type="string">#define luaL_loadfile(L,f)        luaL_loadfilex(L,f,NULL)
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[55]" type="UMLNoteLinkView" guid="DFgvSutW3UeuDvkzACX0uAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">524,3356;467,3362</XPD:ATTR>
<XPD:REF name="Head">t/K62n1m5EyVk+u7ZBkjBgAA</XPD:REF>
<XPD:REF name="Tail">c2kJ49O9ZUeWn+Dp6xzRqwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[56]" type="UMLNoteView" guid="McZAxPIy8Uel2cx9ObSxAgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2008</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2460</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">346</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">233</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct LexState {
  int current;  /* current character (charint) */
  int linenumber;  /* input line counter */
  int lastline;  /* line of last token `consumed' */
  Token t;  /* current token */
  Token lookahead;  /* look ahead token */
  struct FuncState *fs;  /* current function (parser) */
  struct lua_State *L;
  ZIO *z;  /* input stream */
  Mbuffer *buff;  /* buffer for tokens */
  struct Dyndata *dyd;  /* dynamic structures used by the parser */
  TString *source;  /* current source name */
  TString *envn;  /* environment variable name */
  char decpoint;  /* locale decimal point */
} LexState;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[57]" type="UMLNoteView" guid="pVGXdYkuwkKtnvc4tFy3QwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2116</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2340</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">129</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Token {
  int token;
  SemInfo seminfo;
} Token;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[58]" type="UMLNoteView" guid="bsZPsBrhYUirdVCkonStHQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2076</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2212</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">208</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef union {
  lua_Number r;
  TString *ts;
} SemInfo;  /* semantics information */
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[59]" type="UMLNoteLinkView" guid="B4BHeZ+yhUOW14AVcP+s5gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2180,2340;2179,2279</XPD:ATTR>
<XPD:REF name="Head">bsZPsBrhYUirdVCkonStHQAA</XPD:REF>
<XPD:REF name="Tail">pVGXdYkuwkKtnvc4tFy3QwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[60]" type="UMLNoteLinkView" guid="0+wzZRL2SEi7/oejzKrAZQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2180,2460;2180,2407</XPD:ATTR>
<XPD:REF name="Head">pVGXdYkuwkKtnvc4tFy3QwAA</XPD:REF>
<XPD:REF name="Tail">McZAxPIy8Uel2cx9ObSxAgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[61]" type="UMLNoteView" guid="P4uJ7laQ6UK8FQcDMPy/UgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2008</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2740</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">348</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">173</XPD:ATTR>
<XPD:ATTR name="Text" type="string">/*
** nodes for block list (list of active blocks)
*/
typedef struct BlockCnt {
  struct BlockCnt *previous;  /* chain */
  short firstlabel;  /* index of first label in this block */
  short firstgoto;  /* index of first pending goto in this block */
  lu_byte nactvar;  /* # active locals outside the block */
  lu_byte upval;  /* true if some variable in the block is an upvalue */
  lu_byte isloop;  /* true if `block' is a loop */
} BlockCnt;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[62]" type="UMLNoteView" guid="HdSTdSIaPk+Fb6iXRF/aJwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2688</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2388</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">310</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct SParser {  /* data to `f_parser' */
  ZIO *z;
  Mbuffer buff;  /* dynamic structure used by the scanner */
  Dyndata dyd;  /* dynamic structures used by the parser */
  const char *mode;
  const char *name;
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[63]" type="UMLNoteView" guid="e0dMnym69kaH4NvyEDQ4YwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2956</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2148</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">231</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">158</XPD:ATTR>
<XPD:ATTR name="Text" type="string">/* dynamic structures used by the parser */
typedef struct Dyndata {
  struct {  /* list of active local variables */
    Vardesc *arr;
    int n;
    int size;
  } actvar;
  Labellist gt;  /* list of pending gotos */
  Labellist label;   /* list of active labels */
} Dyndata;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[64]" type="UMLNoteView" guid="MBR3i0rXtEuIsduoQ67pCwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2424</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2192</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">293</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">struct Zio {
  size_t n;                         /* bytes still unread */
  const char *p;                /* current position in buffer */
  lua_Reader reader;       /* reader function */
  void* data;                    /* additional data */
  lua_State *L;                 /* Lua state (for reader) */
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[65]" type="UMLNoteView" guid="V+eiYNG7iU6NQvpR3roJswAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2776</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2224</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">138</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct Mbuffer {
  char *buffer;
  size_t n;
  size_t buffsize;
} Mbuffer;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[66]" type="UMLNoteLinkView" guid="/OgF75OF+kufqUOgL6j6hgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2764,2388;2648,2304</XPD:ATTR>
<XPD:REF name="Head">MBR3i0rXtEuIsduoQ67pCwAA</XPD:REF>
<XPD:REF name="Tail">HdSTdSIaPk+Fb6iXRF/aJwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[67]" type="UMLNoteLinkView" guid="oq0v0behRUqMcu1OmTn17AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2843,2388;2844,2306</XPD:ATTR>
<XPD:REF name="Head">V+eiYNG7iU6NQvpR3roJswAA</XPD:REF>
<XPD:REF name="Tail">HdSTdSIaPk+Fb6iXRF/aJwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[68]" type="UMLNoteLinkView" guid="rQ1aRYZp702PXxfALvLxPgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2901,2388;2988,2305</XPD:ATTR>
<XPD:REF name="Head">e0dMnym69kaH4NvyEDQ4YwAA</XPD:REF>
<XPD:REF name="Tail">HdSTdSIaPk+Fb6iXRF/aJwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[69]" type="UMLNoteView" guid="26zMm4RRL02AoOBoK0w1fwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2660</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2548</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">375</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">218</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef struct expdesc {
  expkind k;
  union {
    struct {  /* for indexed variables (VINDEXED) */
      short idx;  /* index (R/K) */
      lu_byte t;  /* table (register or upvalue) */
      lu_byte vt;  /* whether 't' is register (VLOCAL) or upvalue (VUPVAL) */
    } ind;
    int info;  /* for generic use */
    lua_Number nval;  /* for VKNUM */
  } u;
  int t;  /* patch list of `exit when true' */
  int f;  /* patch list of `exit when false' */
} expdesc;
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[70]" type="UMLNoteView" guid="k7ZHcpYYJEiG9YkYtRqoewAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2660</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2792</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">334</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">248</XPD:ATTR>
<XPD:ATTR name="Text" type="string">typedef enum {
  VVOID,        /* no value */
  VNIL,
  VTRUE,
  VFALSE,
  VK,                /* info = index of constant in `k' */
  VKNUM,        /* nval = numerical value */
  VNONRELOC,        /* info = result register */
  VLOCAL,        /* info = local register */
  VUPVAL,       /* info = index of upvalue in 'upvalues' */
  VINDEXED,        /* t = table register/upvalue; idx = index R/K */
  VJMP,                /* info = instruction pc */
  VRELOCABLE,        /* info = instruction pc */
  VCALL,        /* info = instruction pc */
  VVARARG        /* info = instruction pc */
} expkind;
</XPD:ATTR>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
<XPD:ATTR name="#OwnedElements" type="integer">4</XPD:ATTR>
<XPD:OBJ name="OwnedElements[0]" type="UMLClass" guid="6bI3H+dVJEKIhYujTlgS9gAA">
<XPD:ATTR name="Name" type="string">lua_State</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lua_State</XPD:ATTR>
<XPD:REF name="Namespace">k4yb6qfl20SZNHhhq3HrUwAA</XPD:REF>
<XPD:ATTR name="#Attributes" type="integer">21</XPD:ATTR>
<XPD:OBJ name="Attributes[0]" type="UMLAttribute" guid="ax5LWdtMBEWZmMl6ktpNbAAA">
<XPD:ATTR name="Name" type="string">CommonHeader</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">CommonHeader</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[1]" type="UMLAttribute" guid="6to/ALWjzE+Jv08L1Y/89QAA">
<XPD:ATTR name="Name" type="string">lu_byte status</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte status</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[2]" type="UMLAttribute" guid="xrKGsHYD7E+EVIBCt0761gAA">
<XPD:ATTR name="Name" type="string">StkId top</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">StkId top</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[3]" type="UMLAttribute" guid="Ykv1khU6bES0wvNwm9WSAAAA">
<XPD:ATTR name="Name" type="string">global_State *l_G</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">global_State *l_G</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[4]" type="UMLAttribute" guid="MQgHOc+8Y0K5T/nU4gfWqgAA">
<XPD:ATTR name="Name" type="string">CallInfo *ci</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">CallInfo *ci</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[5]" type="UMLAttribute" guid="9uB+cjoSBk6XbEpvlriNEAAA">
<XPD:ATTR name="Name" type="string">const Instruction *oldpc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">const Instruction *oldpc</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[6]" type="UMLAttribute" guid="9w1y+D7fL0uQ5YlS/DtxMQAA">
<XPD:ATTR name="Name" type="string">StkId stack_last</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">StkId stack_last</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[7]" type="UMLAttribute" guid="swIfIwjzCU2rz5RW+BVgvgAA">
<XPD:ATTR name="Name" type="string">StkId stack</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">StkId stack</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[8]" type="UMLAttribute" guid="v5769m1zRkek3QmV3fYQrQAA">
<XPD:ATTR name="Name" type="string">int stacksize</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">int stacksize</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[9]" type="UMLAttribute" guid="HGIA7Qii2UuzZlWQImqrVwAA">
<XPD:ATTR name="Name" type="string">unsigned short nny</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">unsigned short nny</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[10]" type="UMLAttribute" guid="z8rZWKbozUqlcIJYg8lSfgAA">
<XPD:ATTR name="Name" type="string">unsigned short nCcalls</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">unsigned short nCcalls</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[11]" type="UMLAttribute" guid="G8LuymmPrkGG0qgavZ3fEwAA">
<XPD:ATTR name="Name" type="string">lu_byte hookmask</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte hookmask</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[12]" type="UMLAttribute" guid="v+xJmIIvlUOxiIkK4XVLNwAA">
<XPD:ATTR name="Name" type="string">lu_byte allowhook</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte allowhook</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[13]" type="UMLAttribute" guid="IbimMACfakef9rexmosCJgAA">
<XPD:ATTR name="Name" type="string">int basehookcount</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">int basehookcount</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[14]" type="UMLAttribute" guid="o6RjnANGI0eG5cIwW/HxGwAA">
<XPD:ATTR name="Name" type="string">int hookcount</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">int hookcount</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[15]" type="UMLAttribute" guid="BW3+e/HuUEyIMaUg6EoZEwAA">
<XPD:ATTR name="Name" type="string">lua_Hook hook</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lua_Hook hook</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[16]" type="UMLAttribute" guid="c3UTyqcGck+xEH37tsP7YQAA">
<XPD:ATTR name="Name" type="string">GCObject *openupval</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *openupval</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[17]" type="UMLAttribute" guid="6EIe/WHSI0Gzq/t5XyupcQAA">
<XPD:ATTR name="Name" type="string">GCObject *gclist</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *gclist</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[18]" type="UMLAttribute" guid="SNFzfyV1TkigrP8nDXfE9QAA">
<XPD:ATTR name="Name" type="string">struct lua_longjmp *errorJmp</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">struct lua_longjmp *errorJmp</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[19]" type="UMLAttribute" guid="h+O3dhFiWEaqAWdQuqgvEQAA">
<XPD:ATTR name="Name" type="string">ptrdiff_t errfunc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">ptrdiff_t errfunc</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[20]" type="UMLAttribute" guid="FhJEt11uy0a3fjOayzs8jgAA">
<XPD:ATTR name="Name" type="string">CallInfo base_ci</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">CallInfo base_ci</XPD:ATTR>
<XPD:REF name="Owner">6bI3H+dVJEKIhYujTlgS9gAA</XPD:REF>
</XPD:OBJ>
</XPD:OBJ>
<XPD:OBJ name="OwnedElements[1]" type="UMLClass" guid="7CC8xs8ghU+vvUQgRqglbQAA">
<XPD:ATTR name="Name" type="string">CommonHeader</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">CommonHeader</XPD:ATTR>
<XPD:REF name="Namespace">k4yb6qfl20SZNHhhq3HrUwAA</XPD:REF>
<XPD:ATTR name="#Attributes" type="integer">3</XPD:ATTR>
<XPD:OBJ name="Attributes[0]" type="UMLAttribute" guid="IT/IYmxNd0OxsYMQg2gpMAAA">
<XPD:ATTR name="Name" type="string">GCObject *next</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *next</XPD:ATTR>
<XPD:REF name="Owner">7CC8xs8ghU+vvUQgRqglbQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[1]" type="UMLAttribute" guid="LZr9fQvzIEykXpsanvzGCAAA">
<XPD:ATTR name="Name" type="string">lu_byte tt</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte tt</XPD:ATTR>
<XPD:REF name="Owner">7CC8xs8ghU+vvUQgRqglbQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[2]" type="UMLAttribute" guid="FIyr/8uxVkaxHs6V8EfoAQAA">
<XPD:ATTR name="Name" type="string">lu_byte marked</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte marked</XPD:ATTR>
<XPD:REF name="Owner">7CC8xs8ghU+vvUQgRqglbQAA</XPD:REF>
</XPD:OBJ>
</XPD:OBJ>
<XPD:OBJ name="OwnedElements[2]" type="UMLClass" guid="mxUEHQjubkW77dQ9kkCjwgAA">
<XPD:ATTR name="Name" type="string">union GCObject</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">union GCObject</XPD:ATTR>
<XPD:REF name="Namespace">k4yb6qfl20SZNHhhq3HrUwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedElements[3]" type="UMLClass" guid="DZEHZXDXUkm2C3dP/IjbowAA">
<XPD:ATTR name="Name" type="string">global_State</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">global_State</XPD:ATTR>
<XPD:REF name="Namespace">k4yb6qfl20SZNHhhq3HrUwAA</XPD:REF>
<XPD:ATTR name="#Attributes" type="integer">17</XPD:ATTR>
<XPD:OBJ name="Attributes[0]" type="UMLAttribute" guid="9RQNakuDTkmfPHktDzyzhgAA">
<XPD:ATTR name="Name" type="string">lua_Alloc frealloc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lua_Alloc frealloc</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[1]" type="UMLAttribute" guid="DJtZVZzW40udrbwPJRzuAQAA">
<XPD:ATTR name="Name" type="string">void *ud</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">void *ud</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[2]" type="UMLAttribute" guid="JSuIxilWn0aMhSYobkNg9AAA">
<XPD:ATTR name="Name" type="string">lu_mem totalbytes</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_mem totalbytes</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[3]" type="UMLAttribute" guid="g3Iu2OxD0UOvLUcJJGoVJgAA">
<XPD:ATTR name="Name" type="string">l_mem GCdebt</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">l_mem GCdebt</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[4]" type="UMLAttribute" guid="au+qzIwrs0CrRL5m7s3bTQAA">
<XPD:ATTR name="Name" type="string">lu_mem lastmajormem</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_mem lastmajormem</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[5]" type="UMLAttribute" guid="hqVIGByfvUefMpxuxIfrfQAA">
<XPD:ATTR name="Name" type="string">stringtable strt</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">stringtable strt</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[6]" type="UMLAttribute" guid="TwaKopDFLkuH1s3tZ4/cTwAA">
<XPD:ATTR name="Name" type="string">TValue l_registry</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">TValue l_registry</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[7]" type="UMLAttribute" guid="5wFfZDaam0u+/BZJTe5gsAAA">
<XPD:ATTR name="Name" type="string">lu_byte currentwhite</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte currentwhite</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[8]" type="UMLAttribute" guid="PImdOwOIuEmIo5z83VbAvgAA">
<XPD:ATTR name="Name" type="string">lu_byte gcstate</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte gcstate</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[9]" type="UMLAttribute" guid="+qNaYTt3MkCv+gevgW9gPAAA">
<XPD:ATTR name="Name" type="string">lu_byte gckind</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte gckind</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[10]" type="UMLAttribute" guid="POyuR/dY4UuehJydwOpjQwAA">
<XPD:ATTR name="Name" type="string">lu_byte gcrunning</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">lu_byte gcrunning</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[11]" type="UMLAttribute" guid="nH10B2gA6kuqZxQAayOIfQAA">
<XPD:ATTR name="Name" type="string">int sweepstrgc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">int sweepstrgc</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[12]" type="UMLAttribute" guid="LoVoQvorUUmztUBrx5bf3gAA">
<XPD:ATTR name="Name" type="string">GCObject *allgc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *allgc</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[13]" type="UMLAttribute" guid="CHyhkffADkyZlbGMuGCdLAAA">
<XPD:ATTR name="Name" type="string">GCObject *finobj</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *finobj</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[14]" type="UMLAttribute" guid="mepefXnN1E6z2bPveNh7jwAA">
<XPD:ATTR name="Name" type="string">GCObject **sweepgc</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject **sweepgc</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[15]" type="UMLAttribute" guid="PoTe2iMx0Ei4y81TgwXY1QAA">
<XPD:ATTR name="Name" type="string">GCObject *gray</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *gray</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="Attributes[16]" type="UMLAttribute" guid="Z40L2VfxJUWQZZNhFDeyvgAA">
<XPD:ATTR name="Name" type="string">GCObject *grayagain</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">GCObject *grayagain</XPD:ATTR>
<XPD:REF name="Owner">DZEHZXDXUkm2C3dP/IjbowAA</XPD:REF>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
</XPD:BODY>
</XPD:PROJECT>
