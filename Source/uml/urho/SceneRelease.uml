<?xml version="1.0" encoding="UTF-8"?>
<XPD:PROJECT xmlns:XPD="http://www.staruml.com" version="1">
<XPD:HEADER>
<XPD:SUBUNITS>
</XPD:SUBUNITS>
<XPD:PROFILES>
</XPD:PROFILES>
</XPD:HEADER>
<XPD:BODY>
<XPD:OBJ name="DocumentElement" type="UMLProject" guid="tmGBAA3lj0KlobjRdtwc0QAA">
<XPD:ATTR name="Title" type="string">SceneRelease</XPD:ATTR>
<XPD:ATTR name="#OwnedElements" type="integer">1</XPD:ATTR>
<XPD:OBJ name="OwnedElements[0]" type="UMLModel" guid="jorPb7H3vkyBhQ6NzlzwhQAA">
<XPD:ATTR name="Name" type="string">SceneRelease</XPD:ATTR>
<XPD:ATTR name="InnerName" type="string">SceneRelease</XPD:ATTR>
<XPD:REF name="Namespace">tmGBAA3lj0KlobjRdtwc0QAA</XPD:REF>
<XPD:ATTR name="#OwnedDiagrams" type="integer">1</XPD:ATTR>
<XPD:OBJ name="OwnedDiagrams[0]" type="UMLClassDiagram" guid="ziyZDFHF5Uy2cCbFEcgUxgAA">
<XPD:ATTR name="Name" type="string">SceneRelease</XPD:ATTR>
<XPD:REF name="DiagramOwner">jorPb7H3vkyBhQ6NzlzwhQAA</XPD:REF>
<XPD:OBJ name="DiagramView" type="UMLClassDiagramView" guid="7KSRHidd3ECUfZwhuzVHIQAA">
<XPD:REF name="Diagram">ziyZDFHF5Uy2cCbFEcgUxgAA</XPD:REF>
<XPD:ATTR name="#OwnedViews" type="integer">83</XPD:ATTR>
<XPD:OBJ name="OwnedViews[0]" type="UMLNoteView" guid="GZipQM5+K0e9+Qu72hP6HQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2304</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">172</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">553</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">233</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//场景发布
class SceneRelease :
        public AbstractDataRelease
{
public:
        SceneRelease();
        virtual ~SceneRelease();
        //导出数据
        virtual bool exec(const HashVariantMap&amp; params, const String&amp; sourceName, const String&amp; targetName,
                                          String&amp; outputMsg) override;
protected:
        virtual bool releaseScene(const String&amp; sourceName,const String&amp; targetName);
        virtual bool releaseSceneArea(EndlessArea* area, const String&amp; sourceName, const String&amp; targetName);
        virtual bool releaseModelRes(LodModel* lodModel, const String&amp; sourceName, const String&amp; targetName);
};
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[1]" type="UMLNoteView" guid="2hQUeO3PK062u47lDJom+wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2432</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">508</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">301</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">128</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//导出数据
bool SceneRelease::exec(const HashVariantMap&amp; params,
        const String&amp; sourceName,
        const String&amp; targetName,
        String&amp; outputMsg)
{
       releaseScene(sourceName, targetName)
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[2]" type="UMLNoteLinkView" guid="qsIKNry87Uem6NChCbjVfwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2582,508;2581,404</XPD:ATTR>
<XPD:REF name="Head">GZipQM5+K0e9+Qu72hP6HQAA</XPD:REF>
<XPD:REF name="Tail">2hQUeO3PK062u47lDJom+wAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[3]" type="UMLNoteView" guid="lXcMi/4EAE6YGxhXuiQTkAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2320</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">736</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">534</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">398</XPD:ATTR>
<XPD:ATTR name="Text" type="string">bool SceneRelease::releaseScene(const String&amp; sourceName, const String&amp; targetName)
{
        gReleasedModels.clear();
        String prefix = &quot;/scene/&quot;;
        String targetPath = targetName + prefix;

        String sourcePath = FileUtil::getPath(sourceName);
        String baseName = FileUtil::getBaseName(sourceName);
        Context* context = EditorUtil::getContext();
        FileSystem* fileSys = context-&gt;getSubsystem&lt;FileSystem&gt;();
    
       ////首先清理目标文件夹  trunk\assets\res\scene\ baseName
       //新建一个Scene,加载当前操作的场景文件 public\assets_project\Scene\sourceName
       //动态调整摄像机远近距离 写死为 近距200 远距 40000 
       //主要是防止摄像机远近距离这个值策划填得太离谱，其他的数值也可以采用这种方法
       // 保存场景，调用EndlessScene.writeToStream() 生成 .scene二进制文件
       // 注意 .scene文件中保存的东西其实很少，相关的只有：基本属性，主光源，烘焙信息
       // 地形组信息，无尽水域信息，区域描述，Avatar环境

       //发布分区
        ..............

       //lightmaps 目录创建和复制
       //terrains 目录创建和复制       
       // lightmaps 和 terrains 目录都是直接创建和拷贝 public目录中的东西到trunk目录，没有其它操作
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[4]" type="UMLNoteLinkView" guid="qWxybX4M4UOPQ7/p9EqO4wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2584,736;2583,635</XPD:ATTR>
<XPD:REF name="Head">2hQUeO3PK062u47lDJom+wAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[5]" type="UMLNoteView" guid="QoR53fvjxUu0Lu01527aQgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1968</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">716</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">290</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//首先清理目标文件夹
fileSys-&gt;removeDir(targetPath + &quot;/&quot; + baseName);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[6]" type="UMLNoteView" guid="nbdTTVvWxU2FFGcaN9IRfQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1788</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">792</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">422</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布场景文件
 SharedPtr&lt;EndlessScene&gt; scene(C_NEW EndlessScene(context));
scene-&gt;load(sourceName);
scene-&gt;getTerrainGroup()-&gt;unloadDetailDefs();
scene-&gt;getTerrainGroup()-&gt;loadDetailDefs(&quot;scene/terraintextures/dets.xml&quot;);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[7]" type="UMLNoteView" guid="vBJUNuDzQEy7PodI/LeQmQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1940</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">900</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">253</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//动态调整摄像机元近距离
scene-&gt;setMainCameraNearClip(200.0f);
scene-&gt;setMainCameraFarClip(40000.0f);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[8]" type="UMLNoteView" guid="4/Egcx3x1EqypGA7RBOAXwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1816</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">972</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">361</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//调整地形纹理路径, 
 EndlessTerrainGroup * terrainGroup = scene-&gt;getTerrainGroup();
unsigned int terrainCount = terrainGroup-&gt;getNumTerrains();
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[9]" type="UMLNoteView" guid="H2swmMjWoU2kzd4AgZdI3AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1896</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1052</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">357</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">// 保存场景
scene-&gt;saveToBinary(targetPath + &quot;/&quot; + baseName + &quot;.scene&quot;);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[10]" type="UMLNoteView" guid="qOYpF23w+EWYCUac4e/WmgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2960</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">716</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">388</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">143</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布分区
scene-&gt;loadAllAreas();
for (unsigned index = 0; index &lt; scene-&gt;getNumAreaDesc(); ++index)
{
        const AreaDesc* desc = scene-&gt;getAreaDescByIndex(index);
        EndlessArea* area = scene-&gt;getArea(desc-&gt;x, desc-&gt;z);
        if(area)
              releaseSceneArea(area, sourceName, targetName);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[11]" type="UMLNoteView" guid="uDHuqR64zECIL/MsqiGaZwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2964</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">904</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">390</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//lightmaps 目录创建和复制
String bakeSourcePath = sourcePath + &quot;/&quot; + baseName + &quot;/lightmaps/&quot;;
String bakeTargetPath = targetPath + &quot;/&quot; + baseName + &quot;/lightmaps/&quot;;
fileSys-&gt;createDir(bakeTargetPath);
EditorUtil::copyFiles(bakeSourcePath, bakeTargetPath);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[12]" type="UMLNoteView" guid="l2qpTp+nv06iPW6qREeD+gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2976</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1032</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">391</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//terrains 目录创建和复制
String terrainSourcePath = sourcePath + &quot;/&quot; + baseName + &quot;/terrains/&quot;;
String terrainTargetPath = targetPath + &quot;/&quot; + baseName + &quot;/terrains/&quot;;
fileSys-&gt;createDir(terrainTargetPath);
EditorUtil::copyFiles(terrainSourcePath, terrainTargetPath);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[13]" type="UMLNoteLinkView" guid="QkSPSOJOBk2vS6dJqWzOkQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2320,822;2157,753</XPD:ATTR>
<XPD:REF name="Head">QoR53fvjxUu0Lu01527aQgAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[14]" type="UMLNoteLinkView" guid="7wS0Peq+v06cQVrkMmTY2QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2320,888;2209,869</XPD:ATTR>
<XPD:REF name="Head">nbdTTVvWxU2FFGcaN9IRfQAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[15]" type="UMLNoteLinkView" guid="d4vokzvw5k2XARRLnDMn3QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2320,930;2192,928</XPD:ATTR>
<XPD:REF name="Head">vBJUNuDzQEy7PodI/LeQmQAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[16]" type="UMLNoteLinkView" guid="En4ql1T/IUOSeb+zLdr45wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2320,963;2176,979</XPD:ATTR>
<XPD:REF name="Head">4/Egcx3x1EqypGA7RBOAXwAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[17]" type="UMLNoteLinkView" guid="HvTPQXMgnk2ThSZaBPX7TQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2320,1005;2142,1052</XPD:ATTR>
<XPD:REF name="Head">H2swmMjWoU2kzd4AgZdI3AAA</XPD:REF>
<XPD:REF name="Tail">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[18]" type="UMLNoteLinkView" guid="wMktevJO3UCv2ZvCZFZRgwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2960,837;2853,865</XPD:ATTR>
<XPD:REF name="Head">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
<XPD:REF name="Tail">qOYpF23w+EWYCUac4e/WmgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[19]" type="UMLNoteLinkView" guid="RhFNar9/pkCvqq2ABEeGqAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2964,941;2853,939</XPD:ATTR>
<XPD:REF name="Head">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
<XPD:REF name="Tail">uDHuqR64zECIL/MsqiGaZwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[20]" type="UMLNoteLinkView" guid="qAZ0CTvoGUe8Zfr/AaPrCQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2998,1032;2853,998</XPD:ATTR>
<XPD:REF name="Head">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
<XPD:REF name="Tail">l2qpTp+nv06iPW6qREeD+gAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[21]" type="UMLNoteView" guid="fXqHXOlnjUupHgBRB7jFGgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2164</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1368</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">844</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">1043</XPD:ATTR>
<XPD:ATTR name="Text" type="string">bool SceneRelease::releaseSceneArea(EndlessArea* area, const String&amp; sourceName, const String&amp; targetName)
{
        EndlessScene* scene = area-&gt;getScene();

        ProjectFile* pf = EditorUtil::getProjectFile();
        FileSystem* fileSys = EditorUtil::getContext()-&gt;getSubsystem&lt;FileSystem&gt;();
        String sourcePath = FileUtil::getPath(sourceName);
        String prefix = &quot;/scene/&quot;;
        String targetPath = targetName + prefix + &quot;/&quot;;
        String baseName = FileUtil::getBaseName(sourceName);
        String targetBaseName = baseName;
        if (!mRename.empty())
                targetBaseName = mRename;

        String targetFileName = targetPath + &quot;/&quot; + targetBaseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area&quot;;
        
        //草地最多有8层，所以每个地形中草地最多有8张密度图和8张缩放图
        // EndlessTerrain-&gt;saveGrassDataMap()，可以将这8张密度和缩放图打包成一张 vegetat_x_x.gdm 图
     
        // 如果这个区域有地形
        // 新建一个HeightMap 加载public下对应目录的高度图，再把这个高度图压缩保存到 trunk/assets/res/scene/xxx/area下面为heightmap_x_x.hdata格式
        // 新建一个Image 加载public下对应目录的混合图，再把这个混合图保存到 trunk/assets/res/scene/xxx/area下面为 blendmap_x_x.png格式

        // 如果这个区域有无尽水域
        // 新建一个HeightMap 加载public下对应目录的高度图，再把这个高度图压缩保存到 trunk/assets/res/scene/xxx/area下面为heightmap_water_x_x.hdata格式
       
        // 收集所有点光源 ，放入 ignores 表中，发布的时候要全部删除掉，游戏中的场景不能存在太多的光源，否则渲染无法保证性能
 
         // 对特效路径进行重新定位，特效在public目录和在 trunk目录中的结构不一致，所以多了这一步操作，还有现在场景上的特效都以sector的形式来触发
         // 只有在可视范围内的 Effect 才地动态生成

          // 查找Area中所有带有CollisionShape组件的 节点，调用每个 CollisionShape-&gt;setCollisionLayer(SHAPE_WALL_MASK) 设置碰撞层
          // 查找Area中所有带有NavigationModel组件的 节点，调用每个 NavigationModel-&gt;setCollisionLayer(SHAPE_TERRAIN_MASK) 设置碰撞层


          // 如果要发布场景资源
          // 在 trunk\assets\res\scenemodels\sceneName\下创建 material 目录和 texture 目录
          // 查找 Area 中所以带 LodModel 组件的节点 调用 releaseModelRes() 发布模型资源
          //  ..................

          // 发布地表纹理
          // 在 trunk\assets\res\scene\下创建 terraintextures 目录和 grasstextures 目录
          // 遍历 TerrainGroup下的所有地形 （这里这样写是有问题的，存在重复操作的问题， TerrainGroup包含所有区域的地形，而一个区域一般只有一个地形）
          // 一个地形最多有四层纹理，每一层纹理包含漫反射图和法线图 ，这些信息包含在 DetailDef结构体中
          // terrain-&gt;getDetailXID() 可以取到每一层纹理在 dets.xml 中的对应 ID,利用这个id,就可以知道每一层的纹理和法线图的具体资源路径
          // 把对应的纹理资源在 public\assets_project\Resource\scene\terraintextures 中拷贝到 trunk\assets\res\scene\terraintextures  中
      

          // 准备工作做完，开始把Area的属性和Area中的所有组件导出成为 .area文件
          // .area包括基本信息 position rotation scale，Area上所有节点及其组件，烘焙图信息，地形相关信息，地形和草的每个层的纹理信息，导航信息

           // 地形网格相关信息
           // 拷贝网络信息 从 public\assets_project\Scene\XXX\areas\X_X.area.grid 到  trunk\assets\res\scene\XXX\areas\X_X.area.grid
           // 发布格子文件前，先过滤掉某些障碍物导致的不可行走区域。先通过 grid-&gt;load(gridSourceFileName)加载
           // public\assets_project\Scene\XXX\areas\X_X.area.grid中的格子信息，再通过 NavigationMesh-&gt;isHit()检测Area中每个格子中央是否有物体
           // 如果检测到有物体，则在加载到的grid中动态标识出这个数据，最后再发布生成这个grid的信息到trunk\assets\res\scene\XXX\areas\X_X.area.grid

           // 拷贝导航网格
           // 从 public\assets_project\Scene\XXX\areas\X_X.area.nav 到  trunk\assets\res\scene\XXX\areas\X_X.area.nav

           // 发布烘焙信息
           // 创建一个 EndlessLightmaps ，并加载  public\assets_project\Scene\XXX\areas\X_X.area.lightmaps
           // lightmapsFile.loadFile()
           // 从  lightmapsFile 中找出所有的 Lightmap ,再从每个 Lightmap中找出所有的 lightmap-&gt;textureNames ,也就是烘焙图对应的纹理名称
           // 之后，创建一个 Image,先通过 image.loadFile() 加载之前找出来的那个纹理，再把这个Image 保存为 .jpg
           // 遍历完成之后，再把调用 EndlessLightmaps.saveFile() 保存lightmaps 到  trunk\assets\res\scene\XXX\areas\X_X.area.lightmaps

        return true;
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[22]" type="UMLNoteView" guid="MTZ0HCBjTEmLXCW7Z1cGXgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1600</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1124</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">317</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (area-&gt;getTerrain())
{
      ................

}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[23]" type="UMLNoteView" guid="67x2LV/2G02UrKsj3vyI0gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1220</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1312</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">684</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">203</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (area-&gt;getWater())
{
        //发布高度图
        String name = String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ());
        float tolerance = 0.05f;

        HeightMap heightMap(EditorUtil::getContext());
        heightMap.loadFile(sourcePath + &quot;/&quot; + baseName + &quot;/terrains/heightmap_water_&quot; + name + &quot;.hdata&quot;, Resource::EMTITY_PARAMS);
        heightMap.saveCompressFile(targetPath + &quot;/&quot; + targetBaseName + &quot;/terrains/heightmap_water_&quot; + name + &quot;.hdata&quot;, tolerance);

        //替换高度图
        area-&gt;getWater()-&gt;setHeightMapName(&quot;scene/&quot; + targetBaseName + &quot;/terrains/heightmap_water_&quot; + name + &quot;.hdata&quot;);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[24]" type="UMLNoteView" guid="kYlYI0gcVUiV00AWpVBUeAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1420</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1548</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">396</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">233</XPD:ATTR>
<XPD:ATTR name="Text" type="string">PODVector&lt;Component*&gt; ignores;
//屏蔽所有点光源
{
        PODVector&lt;Light*&gt; lights;
        area-&gt;getComponents&lt;Light&gt;(lights, true);
        for (unsigned index = 0; index &lt; lights.size(); ++index)
        {
                Light* l = lights[index];
                if (!l-&gt;isTemporary() &amp;&amp; l-&gt;getLightType() != LIGHT_DIRECTIONAL)
                {
                        l-&gt;setTemporary(true);
                        ignores.push(l);
                }
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[25]" type="UMLNoteView" guid="TSrBDhqWR02wFWbasziD5AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1540</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1840</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">327</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">188</XPD:ATTR>
<XPD:ATTR name="Text" type="string">///对特效进行路径重新定位
///将 EffectComponent 转成 Sector
{
        PODVector&lt;EffectComponent*&gt; effects;
        area-&gt;getComponents&lt;EffectComponent&gt;(effects, true);
        for (unsigned index = 0; index &lt; effects.size(); ++index)
        {
                EffectComponent* l = effects[index];
              
                ........................
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[26]" type="UMLNoteView" guid="Mv1QJu9fO0qdscoqQ5PqwwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1528</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2188</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">400</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">38</XPD:ATTR>
<XPD:ATTR name="Text" type="string">        ///修改所有碰撞对象的Mask
         ...........................
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[27]" type="UMLNoteView" guid="3xe2O7WBPUimrEUKCXEOMQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">1428</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2360</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">662</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">218</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布所有LodModel资源
        if (mReleaseRes)
        {
                //fileSys-&gt;removeDir(targetName + &quot;/scenemodels/&quot; + baseName);
                //资源目录
                String resourceGroup = area-&gt;getParam(&quot;ResourceGroup&quot;).getString();
                fileSys-&gt;createDir(targetName + &quot;/scenemodels/&quot; + resourceGroup);
                fileSys-&gt;createDir(targetName + &quot;/scenemodels/&quot; + resourceGroup + &quot;/material&quot;);
                fileSys-&gt;createDir(targetName + &quot;/scenemodels/&quot; + resourceGroup + &quot;/texture&quot;);

                ...............................
        }
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[28]" type="UMLNoteView" guid="0FE9hClyKkq5ILST7gtX6AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">3152</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1180</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">340</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">158</XPD:ATTR>
<XPD:ATTR name="Text" type="string">String path = FileUtil::getPath(targetFileName);
area-&gt;getSubsystem&lt;FileSystem&gt;()-&gt;createDir(path);
area-&gt;saveToBinary(targetFileName);
area-&gt;saveDependResourceMetadata(targetFileName + &quot;.meta&quot;);

for (unsigned index = 0; index &lt; ignores.size(); ++index)
{
        Component* l = ignores[index];
        l-&gt;setTemporary(false);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[29]" type="UMLNoteView" guid="YuDQ4jNmb0KkEFkJFIzMkAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">3172</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1484</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">717</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">203</XPD:ATTR>
<XPD:ATTR name="Text" type="string">// copy area grid files
String gridSourceFileName = sourcePath + &quot;/&quot; + baseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.grid&quot;;
String gridTargetFileName = targetPath + &quot;/&quot; + targetBaseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.grid&quot;;

if (fileSys-&gt;fileExists(gridSourceFileName))
{
        ..................
}

//拷贝导航网格
String navSourceFileName = sourcePath + &quot;/&quot; + baseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.nav&quot;;
String navTargetFileName = targetPath + &quot;/&quot; + targetBaseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.nav&quot;;
fileSys-&gt;copy(navSourceFileName, navTargetFileName, true);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[30]" type="UMLNoteView" guid="tTM7Qz5ciEa0xjtjthTS3wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">3128</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1944</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">795</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">128</XPD:ATTR>
<XPD:ATTR name="Text" type="string">String lightmapsSourceFileName = sourcePath + &quot;/&quot; + baseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.lightmaps&quot;;
String lightmapsTargetFileName = targetPath + &quot;/&quot; + targetBaseName + &quot;/areas/&quot; + String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ()) + &quot;.area.lightmaps&quot;;

EndlessLightmaps lightmapsFile(EditorUtil::getContext());
if (lightmapsFile.loadFile(lightmapsSourceFileName, Resource::EMTITY_PARAMS))
{
       .........................
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[31]" type="UMLNoteLinkView" guid="psUyA1hTEkyuQKnTKjZGRAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2586,1368;2586,1133</XPD:ATTR>
<XPD:REF name="Head">lXcMi/4EAE6YGxhXuiQTkAAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[32]" type="UMLNoteView" guid="E8Z+7f2x5U+bZHnxOCia2gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">468</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1020</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">598</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">///发布草地数据
String name = String(area-&gt;getX()) + &quot;_&quot; + String(area-&gt;getZ());
area-&gt;getTerrain()-&gt;setUseGrassDataMap(true);
area-&gt;getTerrain()-&gt;saveGrassDataMap(targetPath + &quot;/&quot; + targetBaseName + &quot;/terrains/vegetat_&quot; + name + &quot;.gdm&quot;);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[33]" type="UMLNoteView" guid="EH5OWyT1+kKRSTw/LnkIwQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">448</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1104</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">626</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">83</XPD:ATTR>
<XPD:ATTR name="Text" type="string">// 发布高度图
float tolerance = 0.05f;
HeightMap heightMap(EditorUtil::getContext());
heightMap.loadFile(sourcePath + &quot;/&quot; + baseName + &quot;/terrains/heightmap_&quot; + name + &quot;.hdata&quot;, Resource::EMTITY_PARAMS);
heightMap.saveCompressFile(targetPath + &quot;/&quot; + targetBaseName + &quot;/terrains/heightmap_&quot; + name + &quot;.hdata&quot;, tolerance);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[34]" type="UMLNoteView" guid="FRuiTjOO3kyE+/AT/CvySQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">464</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1208</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">590</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">68</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布混合图
Image image(EditorUtil::getContext());
image.loadFile(sourcePath + &quot;/&quot; + baseName + &quot;/terrains/blendmap_&quot; + name + &quot;.png&quot;, Resource::EMTITY_PARAMS);
image.saveWEBP(targetPath + &quot;/&quot; + targetBaseName + &quot;/terrains/blendmap_&quot; + name + &quot;.png&quot;, false, 80.0f);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[35]" type="UMLNoteView" guid="fJtsvACRUUm5kWphfw739QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">516</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1296</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">580</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">53</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//替换高度图、混合图的路径
area-&gt;getTerrain()-&gt;setHeightMapName(&quot;scene/&quot; + targetBaseName + &quot;/terrains/heightmap_&quot; + name + &quot;.hdata&quot;);
area-&gt;getTerrain()-&gt;setBlendMapName(&quot;scene/&quot; + targetBaseName + &quot;/terrains/blendmap_&quot; + name + &quot;.png&quot;);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[36]" type="UMLNoteView" guid="2csx7PXNqEOfYMNDvU4vVwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">756</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1708</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">504</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">const String&amp; name = l-&gt;getEffectName();
String pre = &quot;Effect\\&quot;;
if (name.startsWith(pre))
{
        String newName = &quot;effect\\bin\\&quot; + name.substring(pre.length(), name.length() - pre.length());
        l-&gt;setEffectName(newName);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[37]" type="UMLNoteView" guid="5yO9COnnhkyLnewyiLmPtgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">916</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1848</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">309</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">173</XPD:ATTR>
<XPD:ATTR name="Text" type="string">Node* node = l-&gt;getNode();
if (node)
{
        Sector* sector = node-&gt;createComponent&lt;Sector&gt;();
        sector-&gt;setEnabled(l-&gt;isEnabled());
        sector-&gt;setParam(&quot;EffectName&quot;, l-&gt;getEffectName());
        sector-&gt;setSectorType(EFFECTCOMPONENT_TYPE);
        sector-&gt;setExtents(100, 100, 50);

        node-&gt;removeComponent(l);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[38]" type="UMLNoteView" guid="PQobMGWPNUiiNS+AIDAMrwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">856</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2064</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">372</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">188</XPD:ATTR>
<XPD:ATTR name="Text" type="string">{
        PODVector&lt;CollisionShape*&gt; shapes;
        area-&gt;getDerivedComponents&lt;CollisionShape&gt;(shapes, true);
        for (unsigned index = 0; index &lt; shapes.size(); ++index)
        {
                CollisionShape* shape = shapes[index];
                if (!shape-&gt;isTemporary())
                {
                        shape-&gt;setCollisionLayer(SHAPE_WALL_MASK);
                }
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[39]" type="UMLNoteView" guid="W4A5eGwTa0WVy0PTZndUrwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">856</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2272</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">376</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">188</XPD:ATTR>
<XPD:ATTR name="Text" type="string">{
        PODVector&lt;NavigationModel*&gt; navModels;
        area-&gt;getDerivedComponents&lt;NavigationModel&gt;(navModels, true);
        for (unsigned index = 0; index &lt; navModels.size(); ++index)
        {
                NavigationModel* navModel = navModels[index];
                if (!navModel-&gt;isTemporary())
                {
                        navModel-&gt;setCollisionLayer(SHAPE_TERRAIN_MASK);
                }
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[40]" type="UMLNoteView" guid="qcBNfdLyzE+rIFnIYEKJcAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">676</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2592</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">614</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">218</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布模型资源
{
        PODVector&lt;LodModel*&gt; models;
        area-&gt;getDerivedComponents&lt;LodModel&gt;(models, true);
        for (unsigned index = 0; index &lt; models.size(); ++index)
        {
                LodModel* l = models[index];
                releaseModelRes(l, sourceName, targetName);
        }

        // 压缩mdl文件们（32k之下不压缩）
        PluginUtil* pluginUtil = EditorUtil::getContext()-&gt;getSubsystem&lt;PluginUtil&gt;();
        pluginUtil-&gt;compressSpecificFiles(targetName + &quot;/scenemodels/&quot; + resourceGroup, PluginUtil::ModelCompressMinSize);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[41]" type="UMLNoteView" guid="qLxV5YGMQ0qu1ZRC+87TwAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">768</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2956</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">481</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">218</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布碰撞模型  暂时没有用到
{
        PODVector&lt;NavigationModel*&gt; models;
        area-&gt;getDerivedComponents&lt;NavigationModel&gt;(models, true);
        for (unsigned index = 0; index &lt; models.size(); ++index)
        {
                NavigationModel* l = models[index];
                //拷贝模型
                String absoModelFileName = pf-&gt;getResourceAbsoPath() + &quot;/&quot; + l-&gt;getModelName();
                //直接拷贝
                fileSys-&gt;copy(absoModelFileName,
                        targetName + &quot;/&quot; + l-&gt;getModelName(), true);
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[42]" type="UMLNoteView" guid="xUE+Ufq5RkGY3/KHBfmnRgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">784</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3448</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">480</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">233</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布地表纹理
{
        area-&gt;getSubsystem&lt;FileSystem&gt;()-&gt;createDir(targetName + &quot;/scene/terraintextures&quot;);
        area-&gt;getSubsystem&lt;FileSystem&gt;()-&gt;createDir(targetName + &quot;/scene/grasstextures&quot;);
        for (unsigned index = 0; index &lt; scene-&gt;getTerrainGroup()-&gt;getNumTerrains(); ++index)
        {
                EndlessTerrain* terrain = scene-&gt;getTerrainGroup()-&gt;getTerrainByIndex(index);
                DetailDef* def1 = scene-&gt;getTerrainGroup()-&gt;getDetailDef(terrain-&gt;getDetail1ID());
                DetailDef* def2 = scene-&gt;getTerrainGroup()-&gt;getDetailDef(terrain-&gt;getDetail2ID());
                DetailDef* def3 = scene-&gt;getTerrainGroup()-&gt;getDetailDef(terrain-&gt;getDetail3ID());
                DetailDef* def4 = scene-&gt;getTerrainGroup()-&gt;getDetailDef(terrain-&gt;getDetail4ID());

                ..........................                               
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[43]" type="UMLNoteView" guid="WJLstLvPpkS9ysglAwDWJgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">152</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3188</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">362</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (def1)
{
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def1-&gt;diffuse,
                targetName + &quot;/&quot; + def1-&gt;diffuse, true);
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def1-&gt;normal,
                targetName + &quot;/&quot; + def1-&gt;normal, true);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[44]" type="UMLNoteView" guid="djHqI5EaG0mIZnUK1FwNlgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">152</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3336</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">362</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (def2)
{
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def2-&gt;diffuse,
                targetName + &quot;/&quot; + def2-&gt;diffuse, true);
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def2-&gt;normal,
                targetName + &quot;/&quot; + def2-&gt;normal, true);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[45]" type="UMLNoteView" guid="r81mv0Q4CEywjAAlXc5orQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">152</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3484</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">362</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (def3)
{
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def3-&gt;diffuse,
                targetName + &quot;/&quot; + def3-&gt;diffuse, true);
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def3-&gt;normal,
                targetName + &quot;/&quot; + def3-&gt;normal, true);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[46]" type="UMLNoteView" guid="/FMCnKWrt0GIJNXc2KaRkgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">152</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3620</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">362</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">113</XPD:ATTR>
<XPD:ATTR name="Text" type="string">if (def4)
{
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def4-&gt;diffuse,
                targetName + &quot;/&quot; + def4-&gt;diffuse, true);
        fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + def4-&gt;normal,
                targetName + &quot;/&quot; + def4-&gt;normal, true);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[47]" type="UMLNoteView" guid="AcmiDY5gTUOdNC4RhBBE5QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">132</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3756</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">383</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">173</XPD:ATTR>
<XPD:ATTR name="Text" type="string"> //发布植被纹理
for (unsigned g = 0; g &lt; terrain-&gt;getNumGrasses(); ++g)
{
        Grass* grass = terrain-&gt;getGrass(g);
        const String&amp; grassTexture = grass-&gt;getDiffuseTextureName();
        if (!grassTexture.empty())
        {
                fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + grassTexture,
                        targetName + &quot;/&quot; + grassTexture, true);
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[48]" type="UMLNoteLinkView" guid="BO0HbC19Vka3HeGGc2S6ngAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">784,3453;453,3300</XPD:ATTR>
<XPD:REF name="Head">WJLstLvPpkS9ysglAwDWJgAA</XPD:REF>
<XPD:REF name="Tail">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[49]" type="UMLNoteLinkView" guid="QYMxFmPFUEye7FSh5v7gtwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">784,3505;513,3437</XPD:ATTR>
<XPD:REF name="Head">djHqI5EaG0mIZnUK1FwNlgAA</XPD:REF>
<XPD:REF name="Tail">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[50]" type="UMLNoteLinkView" guid="67PKBtHySUy0bGhuQBQO1AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">784,3556;513,3546</XPD:ATTR>
<XPD:REF name="Head">r81mv0Q4CEywjAAlXc5orQAA</XPD:REF>
<XPD:REF name="Tail">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[51]" type="UMLNoteLinkView" guid="C9E4odT1zkGXlTKp6eSZ3AAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">784,3603;513,3647</XPD:ATTR>
<XPD:REF name="Head">/FMCnKWrt0GIJNXc2KaRkgAA</XPD:REF>
<XPD:REF name="Tail">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[52]" type="UMLNoteLinkView" guid="s+KXd5lGnU2UnYVe3aIvSwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">784,3659;514,3766</XPD:ATTR>
<XPD:REF name="Head">AcmiDY5gTUOdNC4RhBBE5QAA</XPD:REF>
<XPD:REF name="Tail">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[53]" type="UMLNoteLinkView" guid="dnHnEtEGBkOacVFZzed3OAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1428,2567;1289,2608</XPD:ATTR>
<XPD:REF name="Head">qcBNfdLyzE+rIFnIYEKJcAAA</XPD:REF>
<XPD:REF name="Tail">3xe2O7WBPUimrEUKCXEOMQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[54]" type="UMLNoteLinkView" guid="KER+SbVbgEOZ4SrbcGHYvgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1621,2577;1144,2956</XPD:ATTR>
<XPD:REF name="Head">qLxV5YGMQ0qu1ZRC+87TwAAA</XPD:REF>
<XPD:REF name="Tail">3xe2O7WBPUimrEUKCXEOMQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[55]" type="UMLNoteLinkView" guid="8SuQrZJLkEmROiwNNfBfBQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1685,2577;1101,3448</XPD:ATTR>
<XPD:REF name="Head">xUE+Ufq5RkGY3/KHBfmnRgAA</XPD:REF>
<XPD:REF name="Tail">3xe2O7WBPUimrEUKCXEOMQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[56]" type="UMLNoteLinkView" guid="Af7Afqdzw0KZ06gFCAg6hgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1528,2192;1227,2170</XPD:ATTR>
<XPD:REF name="Head">PQobMGWPNUiiNS+AIDAMrwAA</XPD:REF>
<XPD:REF name="Tail">Mv1QJu9fO0qdscoqQ5PqwwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[57]" type="UMLNoteLinkView" guid="M35ddLtMSk2m0L/pHSGoWgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1645,2225;1231,2321</XPD:ATTR>
<XPD:REF name="Head">W4A5eGwTa0WVy0PTZndUrwAA</XPD:REF>
<XPD:REF name="Tail">Mv1QJu9fO0qdscoqQ5PqwwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[58]" type="UMLNoteLinkView" guid="x3DZ3lNI60ab6X3GgEnDHAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1540,1893;1238,1820</XPD:ATTR>
<XPD:REF name="Head">2csx7PXNqEOfYMNDvU4vVwAA</XPD:REF>
<XPD:REF name="Tail">TSrBDhqWR02wFWbasziD5AAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[59]" type="UMLNoteLinkView" guid="nNy+5D3aWUCn+pDZhXyRxwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1540,1933;1224,1934</XPD:ATTR>
<XPD:REF name="Head">5yO9COnnhkyLnewyiLmPtgAA</XPD:REF>
<XPD:REF name="Tail">TSrBDhqWR02wFWbasziD5AAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[60]" type="UMLNoteView" guid="7lsJpkL5hka3BHuwxeUenQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">4068</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1124</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">434</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">473</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布格子文件，发布前，先过滤掉某些障碍物导致的不可行走区域
TerrainGridGroup* gridGroup = area-&gt;getScene()-&gt;getTerrainGridGroup();
NavigationWorld* navWorld = area-&gt;getScene()-&gt;getNavigationWorld();
NavigationMesh* nav = navWorld-&gt;getMesh(area-&gt;getX(), area-&gt;getX());
TerrainGrid* grid = gridGroup-&gt;getOrCreateTerrainGrid(area-&gt;getX(), area-&gt;getX());
if (grid-&gt;load(gridSourceFileName))
{
        if (nav)
        {
                int width = grid-&gt;getWidth();
                int height = grid-&gt;getHeight();
                float gridSize = area-&gt;getWorldSize() / width;
                for (unsigned h = 0; h &lt; height; ++h)
                {
                        for (unsigned w = 0; w &lt; width; ++w)
                        {
                                float xOffset = area-&gt;getX() * width;
                                float zOffset = area-&gt;getZ() * height;
                                Vector3 pos(w * gridSize + gridSize * 0.5f + xOffset, 
                                        999999.0f, 
                                        h * gridSize + gridSize * 0.5f + zOffset);
                                if (!nav-&gt;isHit(pos, Vector3::ONE))
                                {
                                        //添加主档
                                        grid-&gt;set(0, w, h, 1);
                                }
                        }
                }
        }
        grid-&gt;saveTo(gridTargetFileName);
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[61]" type="UMLNoteLinkView" guid="oJuSrzt0skq+644sxlxUUwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">3216,1686;3007,1753</XPD:ATTR>
<XPD:REF name="Head">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
<XPD:REF name="Tail">YuDQ4jNmb0KkEFkJFIzMkAAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[62]" type="UMLNoteLinkView" guid="l/xfZlEJ5kOFDB2yS1ZIiwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">4068,1424;3868,1484</XPD:ATTR>
<XPD:REF name="Head">YuDQ4jNmb0KkEFkJFIzMkAAA</XPD:REF>
<XPD:REF name="Tail">7lsJpkL5hka3BHuwxeUenQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[63]" type="UMLNoteView" guid="ebA60O8NJkWLDKFJ0cfL+QAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">4092</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">1788</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">704</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">428</XPD:ATTR>
<XPD:ATTR name="Text" type="string"> const EndlessLightmaps::Lightmaps&amp; maps = lightmapsFile.getLightmaps();
        EndlessLightmaps::Lightmaps::ConstIterator i, iend = maps.end();
        for (i = maps.begin(); i != iend; ++i)
        {
                EndlessLightmaps::Lightmap* lightmap = i-&gt;second;
                for (int index = 0; index &lt; lightmap-&gt;textureNames.size(); ++index)
                {
                        String&amp; name = lightmap-&gt;textureNames[index];
                        name = name.replaced(&quot;scene/&quot; + baseName, &quot;scene/&quot; + targetBaseName);

                        String extention = FileUtil::getExtention(name);
                        //发布光照图
                        if (extention == &quot;png&quot;)
                        {
                                Image image(EditorUtil::getContext());
                                image.loadFile(sourcePath + &quot;/&quot; + baseName + &quot;/lightmaps/&quot; + FileUtil::getFileName(name), Resource::EMTITY_PARAMS);
                                image.saveJPG(targetPath + &quot;/&quot; + targetBaseName + &quot;/lightmaps/&quot; + FileUtil::getBaseName(name) + &quot;.jpg&quot;, 90);
                                
                                name = name.replaced(&quot;.png&quot;, &quot;.jpg&quot;);
                        }
                        else
                        {
                                fileSys-&gt;copy(sourcePath + &quot;/&quot; + baseName + &quot;/lightmaps/&quot; + FileUtil::getFileName(name),
                                        targetPath + &quot;/&quot; + targetBaseName + &quot;/lightmaps/&quot; + FileUtil::getFileName(name));
                        }
                }
        }
        lightmapsFile.saveFile(lightmapsTargetFileName);
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[64]" type="UMLNoteLinkView" guid="Hb0qAKtm30Gvrtr37f2xzwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">3128,1957;3007,1942</XPD:ATTR>
<XPD:REF name="Head">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
<XPD:REF name="Tail">tTM7Qz5ciEa0xjtjthTS3wAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[65]" type="UMLNoteLinkView" guid="3zp+WHhQg0CClcr7LmS2tQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">4092,2003;3922,2004</XPD:ATTR>
<XPD:REF name="Head">tTM7Qz5ciEa0xjtjthTS3wAA</XPD:REF>
<XPD:REF name="Tail">ebA60O8NJkWLDKFJ0cfL+QAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[66]" type="UMLNoteLinkView" guid="GYt9NXY6U0GBaOeFVJzAYwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,1520;1805,1206</XPD:ATTR>
<XPD:REF name="Head">MTZ0HCBjTEmLXCW7Z1cGXgAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[67]" type="UMLNoteLinkView" guid="+ud85lO64kGF+226dL9M5wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,1693;1779,1514</XPD:ATTR>
<XPD:REF name="Head">67x2LV/2G02UrKsj3vyI0gAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[68]" type="UMLNoteLinkView" guid="KoacAyaGL0Ciunz1OXV9zgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,1791;1815,1710</XPD:ATTR>
<XPD:REF name="Head">kYlYI0gcVUiV00AWpVBUeAAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[69]" type="UMLNoteLinkView" guid="jyGZcfj5rEW34qouPmIU2gAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,1910;1866,1925</XPD:ATTR>
<XPD:REF name="Head">TSrBDhqWR02wFWbasziD5AAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[70]" type="UMLNoteLinkView" guid="H3fiP7QOgkOAJWBnu/5qBQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,2045;1776,2188</XPD:ATTR>
<XPD:REF name="Head">Mv1QJu9fO0qdscoqQ5PqwwAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[71]" type="UMLNoteLinkView" guid="Ih1YE1XTi0+nElclNRpjIwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2164,2184;1912,2360</XPD:ATTR>
<XPD:REF name="Head">3xe2O7WBPUimrEUKCXEOMQAA</XPD:REF>
<XPD:REF name="Tail">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[72]" type="UMLNoteLinkView" guid="2x922/dGEkKH8BR2G2pLnwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1600,1147;1065,1087</XPD:ATTR>
<XPD:REF name="Head">E8Z+7f2x5U+bZHnxOCia2gAA</XPD:REF>
<XPD:REF name="Tail">MTZ0HCBjTEmLXCW7Z1cGXgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[73]" type="UMLNoteLinkView" guid="D7CYfYhS4E+/qtaUqkVfEAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1600,1162;1073,1151</XPD:ATTR>
<XPD:REF name="Head">EH5OWyT1+kKRSTw/LnkIwQAA</XPD:REF>
<XPD:REF name="Tail">MTZ0HCBjTEmLXCW7Z1cGXgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[74]" type="UMLNoteLinkView" guid="OReDMoear0GXYMMLZ8TnaQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1600,1177;1053,1219</XPD:ATTR>
<XPD:REF name="Head">FRuiTjOO3kyE+/AT/CvySQAA</XPD:REF>
<XPD:REF name="Tail">MTZ0HCBjTEmLXCW7Z1cGXgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[75]" type="UMLNoteLinkView" guid="0r7WeGU0UEW9TOG/e0mJCQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">1600,1191;963,1296</XPD:ATTR>
<XPD:REF name="Head">fJtsvACRUUm5kWphfw739QAA</XPD:REF>
<XPD:REF name="Tail">MTZ0HCBjTEmLXCW7Z1cGXgAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[76]" type="UMLNoteView" guid="fJ638FfXlUG9u15DOricKQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">2216</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2660</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">738</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">623</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//发布模型
bool SceneRelease::releaseModelRes(LodModel* lodModel,const String&amp; sourceName, const String&amp; targetName)
{
        FileSystem* fileSys = EditorUtil::getContext()-&gt;getSubsystem&lt;FileSystem&gt;();
        ProjectFile* pf = EditorUtil::getProjectFile();
        String resourceGroup = lodModel-&gt;getArea()-&gt;getParam(&quot;ResourceGroup&quot;).getString();

        String modelFileName = lodModel-&gt;getModelName();

        if (gReleasedModels.contains(modelFileName))
                return true;

        gReleasedModels[modelFileName] = lodModel;

        Model* model = lodModel-&gt;getModel();
        if (!model)
                return true;

        ResourceCache* cache = EditorUtil::getContext()-&gt;getSubsystem&lt;ResourceCache&gt;();
        bool doLodBuild = true;
        
        // 添加材质
        // 加载模型文件同级目录的 .mdl.meta ，查找其中的 materials 字段
        // 对于  materials 字段指明的各个文件xxx.mat，
        // 将他们从 public\assets_project\Resource\scenemodels\XXX\material\xxx.mat 到  trunk\assets\res\scenemodels\XXX\material\xxx.mat
        // 和从 public\assets_project\Resource\scenemodels\XXX\material\xxx.mat.meta 到  trunk\assets\res\scenemodels\XXX\material\xxx.mat.meta
        // 将各个xxx.mat中使用到的漫反射纹理
        // 从 public\assets_project\Resource\scenemodels\XXX\texture\xxx.jpg到  trunk\assets\res\scenemodels\XXX\texture\xxx.jpg


        // 拷贝模型文件
        // 从 public\assets_project\Resource\scenemodels\XXX\xxx.mdl 到  trunk\assets\res\scenemodels\XXX\xxx.mdl
        // 拷贝模型对应的.meta文件
        //  从public\assets_project\Resource\scenemodels\XXX\xxx.mdl.meta到  trunk\assets\res\scenemodels\XXX\xxx.mdl.meta
                

        return true;
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[77]" type="UMLNoteLinkView" guid="ieWPCTg8Z0qTe2RIKtjdbgAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">2584,2660;2584,2410</XPD:ATTR>
<XPD:REF name="Head">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
<XPD:REF name="Tail">fJ638FfXlUG9u15DOricKQAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[78]" type="UMLNoteView" guid="vim4AIqU00C5W6JrfK/7YwAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">3360</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">2656</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">638</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">683</XPD:ATTR>
<XPD:ATTR name="Text" type="string">//添加材质
StringVector materials;
model-&gt;loadMetaFromSelf();
if (model-&gt;hasMetadata(&quot;materials&quot;))
{
        materials = model-&gt;getMetadata(&quot;materials&quot;).getStringVector();
        for (int index = 0; index &lt; materials.size(); ++index)
        {
                SharedPtr&lt;Material&gt; material(cache-&gt;getResource&lt;Material&gt;(materials[index]));
                if (material)
                {
                        material-&gt;loadMetaFromSelf();
                        //拷贝材质
                        String targetMaterialFileName = targetName + &quot;/&quot; + materials[index];
                        //if (!fileSys-&gt;fileExists(targetMaterialFileName))
                        {
                                String sourceMaterialFileName = pf-&gt;getResourceAbsoPath() + &quot;/&quot; + materials[index];
                                fileSys-&gt;copy(sourceMaterialFileName, targetMaterialFileName, true);
                                fileSys-&gt;copy(sourceMaterialFileName + &quot;.meta&quot;, targetMaterialFileName + &quot;.meta&quot;, true);
                        }
                        //拷贝纹理
                        const String&amp; textureName = material-&gt;getTextureName(TU_DIFFUSE);
                        if (!textureName.empty())
                        {
                                String targetTextureFileName = targetName + &quot;/&quot; + textureName;
                                //if (!fileSys-&gt;fileExists(targetTextureFileName))
                                PluginUtil* pluginUtil = material-&gt;getSubsystem&lt;PluginUtil&gt;();
                                pluginUtil-&gt;releaseTexture(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + textureName, targetTextureFileName);
                                //fileSys-&gt;copy(pf-&gt;getResourceAbsoPath() + &quot;/&quot; + textureName, targetTextureFileName, true);
                        }


                        //如果是天空盒，不需要构建Lod
                        String techName = material-&gt;getMetadata(&quot;TechniqueName&quot;).getString();
                        if (techName == &quot;Techniques/DiffSkydome.tech&quot; ||
                                techName == &quot;Techniques/BakeModel.tech&quot; ||
                                techName == &quot;Techniques/DiffUnlitAlpha.tech&quot; ||
                                lodModel-&gt;getWindIndex() != -1)
                        {
                                doLodBuild = false;
                        }
                }
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[79]" type="UMLNoteView" guid="U4k2NzxMNEmzOh6G2wjg3wAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Left" type="integer">3376</XPD:ATTR>
<XPD:ATTR name="Top" type="integer">3408</XPD:ATTR>
<XPD:ATTR name="Width" type="integer">411</XPD:ATTR>
<XPD:ATTR name="Height" type="integer">698</XPD:ATTR>
<XPD:ATTR name="Text" type="string"> //屏蔽lod构建
doLodBuild = false;
//拷贝模型
String absoModelFileName = pf-&gt;getResourceAbsoPath() + &quot;/&quot; + modelFileName;
//如果模型不存在资源包里面，不需要拷贝
if (absoModelFileName.find(&quot;scenemodels/&quot; + resourceGroup) != -1)
{
        if (doLodBuild)
        {
                unsigned numLods = 3;
                unsigned p = 20;
                PODVector&lt;float&gt; distances;
                bool hide = true;
                //主体结构不需要隐藏
                if (lodModel-&gt;isMainBody())
                {
                        hide = false;
                        p = 10;
                        distances.push(2.0f);
                        distances.push(3.0f);
                        distances.push(4.0f);
                        distances.push(5.0f);
                }
                else
                {
                        distances.push(2.0f);
                        distances.push(3.0f);
                        distances.push(4.0f);
                        distances.push(5.0f);
                }
                if (!EditorUtil::BuildLodLevelsToModel(absoModelFileName,
                        targetName + &quot;/&quot; + modelFileName,
                        numLods, p, distances, hide))
                {
                        //直接拷贝
                        fileSys-&gt;copy(absoModelFileName,
                                targetName + &quot;/&quot; + modelFileName, true);
                }
        }
        else
        {
                //直接拷贝
                fileSys-&gt;copy(absoModelFileName,
                        targetName + &quot;/&quot; + modelFileName, true);
        }
}
</XPD:ATTR>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[80]" type="UMLNoteLinkView" guid="0W/sEbLlcEOW7kdeNF7RJAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">3360,2989;2953,2980</XPD:ATTR>
<XPD:REF name="Head">fJ638FfXlUG9u15DOricKQAA</XPD:REF>
<XPD:REF name="Tail">vim4AIqU00C5W6JrfK/7YwAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[81]" type="UMLNoteLinkView" guid="kN+z0gUFtE2g4R3a0qv0cQAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">3376,3595;2953,3262</XPD:ATTR>
<XPD:REF name="Head">fJ638FfXlUG9u15DOricKQAA</XPD:REF>
<XPD:REF name="Tail">U4k2NzxMNEmzOh6G2wjg3wAA</XPD:REF>
</XPD:OBJ>
<XPD:OBJ name="OwnedViews[82]" type="UMLNoteLinkView" guid="WyKQmj3hFEeTxFFIA36OxAAA">
<XPD:ATTR name="LineColor" type="string">clMaroon</XPD:ATTR>
<XPD:ATTR name="FillColor" type="string">$00B9FFFF</XPD:ATTR>
<XPD:ATTR name="Points" type="Points">3229,1337;3007,1527</XPD:ATTR>
<XPD:REF name="Head">fXqHXOlnjUupHgBRB7jFGgAA</XPD:REF>
<XPD:REF name="Tail">0FE9hClyKkq5ILST7gtX6AAA</XPD:REF>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
</XPD:OBJ>
</XPD:BODY>
</XPD:PROJECT>
